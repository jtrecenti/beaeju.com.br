---
title: "Lista de Presentes"
filters:
  - lightbox
lightbox: auto
knitr:
  opts_chunk: 
    echo: false
    message: false
toc: false
---

Esta lista de presentes é feita de produtos fictícios. Cada item representa um valor que será convertido em dinheiro.

Lembre-se que o presente é completamente opcional! O que mais queremos é a presença de pessoas queridas e que torcem pela nossa felicidade!


```{r include=FALSE}
url_sheets <- "https://docs.google.com/spreadsheets/d/1_VsPKJZ6wz2HvabvGI6V-oW-1923KE_FyfKsvy-T2yc/edit#gid=0"

googlesheets4::gs4_auth(email = Sys.getenv("GSHEETS_EMAIL"))

planilha_presentes <- googlesheets4::read_sheet(url_sheets) |> 
  dplyr::arrange(estimativa_preco) |> 
  dplyr::mutate(
    foto = dplyr::if_else(is.na(foto), "presente.jpg", foto),
    foto = dplyr::if_else(
      !stringr::str_starts(foto, "http"),
      paste0("images/lista-de-presenca/", foto), foto
    ),
    foto = glue::glue("<img src='{foto}' style='max-width: 100%;'>"),
    status = dplyr::case_when(
      !status & !is.na(pix_img) ~ as.character(glue::glue("<div class='quarto-figure quarto-figure-center'><figure class='figure'><p><a href='{pix_img}' class='lightbox' data-gallery='pix'><img src='{pix_img}' class='img-fluid figure-img'/></a></p></figure></div>")),
      is.na(pix_img) ~ "",
      TRUE ~ "Já fomos presenteados! Agradecemos muito."
    ),
    preco_cota = round(preco_cota)
  ) |> 
  dplyr::select(-pix_code, -pix_img)


gerar_tabela_presentes <- function(tabela) {
  tabela |>
    dplyr::select(-categoria,-opcao_1, -n_cotas, -preco_cota) |>
    dplyr::arrange(estimativa_preco) |> 
    dplyr::relocate(foto, .before = tidyselect::everything()) |>
    reactable::reactable(
      sortable = TRUE,
      filterable = FALSE,
      pagination = FALSE,
      columns = list(
        item = reactable::colDef(name = "Item", minWidth = 200),
        estimativa_preco = reactable::colDef(
          name = "Estimativa de preço",
          format = reactable::colFormat(
            prefix = "R$ ",
            separators = TRUE,
            locales = "pt"
          ),
          minWidth = 100
        ),

        #  preco_cota = reactable::colDef(
        #   name = "Valor sugerido para cota",
        #   format = reactable::colFormat(
        #     prefix = "R$ ",
        #     separators = TRUE,
        #     locales = "pt"
        #   ),
        #   minWidth = 100
        # ),
        
        foto = reactable::colDef(
          name = "Foto",
          html = TRUE
        ),
        status = reactable::colDef(name = "Presentear", html = TRUE)
      )
    ) 

}

```



## Utensílios domésticos


```{r}
planilha_presentes |>
  dplyr::filter(categoria == "utensilios_domesticos") |>
  gerar_tabela_presentes()
```


## Cama, mesa e banho

```{r}
planilha_presentes |>
  dplyr::filter(categoria == "cama_mesa_banho") |>
  gerar_tabela_presentes()
```

## Mimos para a Noiva

```{r}
planilha_presentes |> 
  dplyr::filter(categoria == "mimos_noiva") |> 
  gerar_tabela_presentes()
```

## Mimos para o Noivo

```{r}
planilha_presentes |> 
  dplyr::filter(categoria == "mimos_noivo") |> 
  gerar_tabela_presentes()
```


## Lua de Mel

```{r}
planilha_presentes |> 
  dplyr::filter(categoria == "luademel") |> 
  dplyr::arrange(dplyr::desc(estimativa_preco)) |> 
  gerar_tabela_presentes()
```

## Eletroportáteis

```{r}
planilha_presentes |> 
  dplyr::filter(categoria == "eletroportateis") |> 
  gerar_tabela_presentes()
```

## Móveis

```{r}
planilha_presentes |> 
  dplyr::filter(categoria == "moveis") |> 
  gerar_tabela_presentes()
```

## Eletrodomésticos

```{r}
planilha_presentes |> 
  dplyr::filter(categoria == "eletrodomesticos") |> 
  gerar_tabela_presentes()
```


```{r}
## chatgpt

# É, não foi fácil pensar na lista de presentes. Então pedimos para o chatGPT ajudar! As imagens foram geradas pelo DALL-E.
# 
# planilha_presentes |> 
#   dplyr::filter(categoria == "chatgpt") |> 
#   gerar_tabela_presentes()
```